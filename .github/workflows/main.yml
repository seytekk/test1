  name: CI

  on:
    push:
      branches: [ main ]
    pull_request:
      branches: [ main ]

  permissions:
    contents: read

  jobs:
    ruff:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: "3.11"
        - name: Install deps (ruff)
          run: |
            python -m pip install --upgrade pip
            pip install ruff
        - name: Ruff check
          run: ruff check .

    tests:
      runs-on: ubuntu-latest

      services:
        postgres:
          image: postgres:16-alpine
          env:
            POSTGRES_DB: appdb_test
            POSTGRES_USER: appuser
            POSTGRES_PASSWORD: secretpassword
          options: >-
            --health-cmd="pg_isready -U appuser -d appdb_test"
            --health-interval=5s
            --health-timeout=5s
            --health-retries=30

      env:
        
        POSTGRES_DB: appdb_test
        POSTGRES_USER: appuser
        POSTGRES_PASSWORD: secretpassword
        POSTGRES_HOST: 127.0.0.1
        POSTGRES_PORT: 5432
        DJANGO_SETTINGS_MODULE: bloglite.settings
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DJANGO_DEBUG: "0"

      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: "3.11"

        - name: Install deps
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Wait for DB + quick query
          run: |
            for i in {1..60}; do
              pg_isready -h 127.0.0.1 -p 5432 -U "$POSTGRES_USER" -d "$POSTGRES_DB" && break
              sleep 1
            done
            PGPASSWORD="$POSTGRES_PASSWORD" psql -h 127.0.0.1 -p 5432 -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 1;"

        - name: Migrate & check
          run: |
            python bloglite/manage.py migrate --noinput
            python bloglite/manage.py check

        - name: Run tests
          run: python bloglite/manage.py test -v 2
